
Observer Pattern
Es un patrón de diseño de software que define una dependencia del
tipo uno a muchos entre objetos, de manera que cuando uno de los
objetos cambia su estado, notifica este cambio a todos los 
demás objetos dependientes.

Iterator Pattern 
En POO, el patrón iterador es una interfaz que declara los métodos
necesarios para acceder secuencialmente a un grupo de objetos de
una colección, algunos métodos principales podrian ser:
primerElemento(), siguiente(), hayMas(), elementoActual(). 

Functional Programming
Refiere a crear un conjunto de funciones con un objetivo específico
Tengo una función que retorna "A" y retorna "A + 1", siempre que
yo llame a esa función retornará "A + 1", siendo la clave que 
no tenga efectos secundarios, ni mute los datos.

En resumen: 
- Observer Pattern => Notificar cuando suceden cambios.

- Iterator Pattern => Poder ejecutar operaciones secuenciales.

- Functional Programming => Tener funciones con tareas específicas
que reciban argumentos y no muten la informacion.

Reactive X es la combinación de las mejores ideas de los 
patrones Observer, Iterator y la programación funcional.